// Assign an ext property if none is passed at build time
def defaultProperty(String name, defaultValue) {
	if (!hasProperty(name)) {
		ext."$name" = defaultValue
	}
}

subprojects {
	
	buildscript {
		
		ext {
		
			springBootVersion			=	'2.1.3.RELEASE'
			springCloudVersion			=	'Greenwich.RELEASE'
			springOauthVersion			=	'2.1.3.RELEASE'
			springVaultVersion			=	'2.1.1.RELEASE'
			modelMapperVersion			=	'2.3.0'
			jerseyVersion				=	'1.19.1'
			spqrVersion					=	'0.9.9'
			graphQlVersion				=	'12.0'
			junitVersion				=	'4.12'
			mockitoVersion				=	'2.27.0'
			embededMongoVersion			=	'2.2.0'
			
			javaVersion					=	'11'
			
		}
		
		defaultProperty 'appVersion', '0.0.1-SNAPSHOT'
		
		repositories {
			mavenCentral()
			maven { url 'http://repo.spring.io/snapshot' }
			maven { url 'http://repo.spring.io/milestone' }
			maven { url 'https://repo.spring.io/libs-snapshot' }
			maven { url 'https://repo1.maven.org/maven2/' }
		}
			
		dependencies {
			classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		}
	}
	
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	apply plugin: 'jacoco'
	
	repositories {
		mavenCentral()
		maven { url 'http://repo.spring.io/snapshot' }
		maven { url 'http://repo.spring.io/milestone' }
		maven { url 'https://repo.spring.io/libs-snapshot' }
		maven { url 'https://repo1.maven.org/maven2' }
	}

	sourceCompatibility = "${javaVersion}"
	targetCompatibility = "${javaVersion}"
	
	jacocoTestReport {
		reports {
			xml.enabled true
			xml.destination file("${buildDir}/reports/jacoco/report.xml")
			csv.enabled false
		}
	}
	
	test.finalizedBy jacocoTestReport
}

